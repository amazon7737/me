import BasicLayout from "@/layouts/BasicLayout";
import React from "react";

export default function ProjectPage() {
  return (
    <BasicLayout>
      <div>
        <p>
          타대학의 강의들은 어떨까? 우리 대학에서 가르치는 같은 이름의 강의라도
          교수님마다 중점으로 가르치고자 하는 내용도 다를것이기에 확연히 다른
          내용의 강의가 될 수 있지 않을까? 하는 생각에서 시작된 프로젝트이다.
        </p>
        <br />
        <p>
          에브리타임이라는 대학교 커뮤니티 앱이 있다. 하지만 매번 올라오는
          질문들 중 하나가 있다.
        </p>
        <br />
        <p>"OO교수님 OO강의 어때요?"</p>
        <br />
        <p>댓글에서 익명으로 선배 학생들이 자신의 후기를 얘기해준다.</p>
        <br />
        <p>
          하지만, 후배 학생은 해당 강의가 자신이 배우고자 하는 내용이 있다면
          있는지 확인하고 싶을테고, 본인에게 도움이 되는 강의인지 확인하고
          싶으면 강의 계획서를 보면 된다.
        </p>
        <br />
        <p>
          교수님의 스타일에 따라서 강의 내용과 생각하는 느낌이 완전히 다를 수
          있기에 궁금할 수 있다.
        </p>
        <br />
        <p>
          선배들마다 후기도 다를뿐더러 원하는 내용이 달랐을 것이고, 학번이
          올라갈수록 과거 교수님이 가르치고자 했던 내용과 현재 내용이 다를 수
          있다.
        </p>
        <br />
        <p>이러한 데이터들을 모두 모아 후배 학생들에게 공유하고자 했다.</p>
        <br />
        <p>따라서 첫번째 목표는 수강후기를 모으기 위한 사이트였다.</p>
        <br />
        <p>
          나는 해당 사이트의 API서버의 코드를 작성하였는데, 스프링부트와 JPA
          그리고 Mysql를 사용하였다. 배포는 오라클 클라우드 EC2서버를
          사용하였다.
        </p>
        <br />
        <p>
          처음하던 Spring Boot API 서버 제작이었기에, 나는 객체에 대한 이해가
          부족했고 원하는 URI의 API를 작성하기 위해서 해당 부분에만 신경을 썼다.
        </p>
        <br />
        <p>
          첫 코드 작성이 완주되고 배포가 진행되었다. 후에 연구실 선배에게
          코드리뷰를 진행하게 되었는데 해당 코멘트들을 받게 되었다.
        </p>
        <br />
        <a href="https://github.com/amazon7737/classreivewsitebuildfile-serving/commit/eeba34df3bde5ed47ab7a24ee01fd9fb46bb7007">
          코드리뷰 pr
        </a>
        <br />

        <br />
        <p>"필요 없는 주석 처리는 모두 지우는게 좋습니다"</p>
        <br />
        <p>
          "줄바꿈이 한줄인지 두줄인지 명확하게 하고 코드를 작성하면 좋은데,
          한줄을 추천드립니다. 모든 부분이 1~3줄정도인 것으로 보이네요"
        </p>
        <br />
        <p>
          "사용하지 않는 코드는 주석처리가 아닌 삭제로 관리하며, 수정 사항에
          대한 것은 커밋으로 관리 하는것이 보기 깔끔하고 좋습니다."
        </p>
        <br />
        <p>
          "repository에서 Optional 으로 불러오는게 null 처리에 있어 orElseThrow
          같은 syntax를 사용해볼 수 있을 것 같아요."
        </p>
        <br />
        <p>"사용하지 않는 import는 제거해주는게 좋아보입니다."</p>
        <br />
        <p>"해당부분에서 setter을 쓰신 이유는 무엇인가요??"</p>
        <br />
        <p>
          "보통 method 안 코드는 줄바꿈을 하지 않고 시작하는 것이 보기
          좋아보입니다."
        </p>
        <br />
        <p>
          "이런것도 정의 할 때, user을 save하는데 있어 user을 정의하는 것이 먼저
          나오고, save하는 것으로 나타내면 좋아보이네요. 정의 행위 return
          추가적으로 user에 변수명을 의미에 맞게 써주면 좋아보여요 user 같은
          변수 명이 어울립니다."
        </p>
        <br />
        <p>
          "entity 변수명 정의 뿐만아닌 거의 모든 변수명 정의를 snake case 보단
          camel case 를 지향합니다."
        </p>
        <br />
        <p>"import도 왠만하면 * 사용은 지양해 주세요."</p>
        <br />
        <p>
          "lec이 어떤 것인지 정확하게 유추가 되지 않는데 작명을 하실 때 줄임말은
          피해주시는게 좋아보여요"
        </p>
        <br />
        <p>
          "여기는 getter setter을 사용하지 않고, 다른 부분은 사용하는 모습이
          보이는데 본인만의 컨벤션을 한번 가져보는것도 좋아보입니다."
        </p>
        <br />
        <p>
          "이러한 주석들은 피해주시고, 해당 변수는 static으로 선언해도
          좋아보이네요"
        </p>
        <br />
        <p>
          "controller에서 많은 일을 부여하지 않고 해결할 수 있는 방법을
          찾아보세요"
        </p>
        <br />
        <p>
          "이런 것들은 user domain 내에서 검증할 수 있는 method를 만들 수
          있어보입니다. 디미터법칙에 대해 한번 찾아보시는걸 추천드립니다."
        </p>
        <br />
        <p>
          "gitignore을 활용하여 build file들이나 out 파일 등 코드를
          형상관리하는데 불필요한 내용들을 제거 해보는 게 좋아보입니다."
        </p>
        <br />
        <p>
          해당 코멘트들을 보며 코드를 바라보니 내가 공부해야할 내용들이 보이기
          시작했고, 해당 리뷰를 반영하여 코드를 변경해나가기 시작했다.
        </p>
        <br />
        <p>
          현재 해당 github 코드는 리뷰 후 코드를 변경한 상태이며, 아직 반영하지
          못한 부분도 있다.
        </p>
      </div>
    </BasicLayout>
  );
}
